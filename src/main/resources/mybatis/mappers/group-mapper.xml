<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.moim.moimapiserver.group.GroupMapper">

    <!-- m_id로 m_no 조회 -->
    <select id="findMNoByUserId" parameterType="string" resultType="java.lang.Integer">
	    SELECT M_NO 
	    FROM TBL_MEMBER 
	    WHERE M_ID = #{userId} OR M_SOCIAL_ID = #{userId}
	</select>

    <!-- 그룹 생성 -->
    <insert id="insertNewGroup" parameterType="com.moim.moimapiserver.group.GroupDto">
        INSERT INTO TBL_GROUP (
            G_NAME, G_INFO, G_CATEGORY, G_MASTER_ID, G_IMG_NAME, G_LOCATION, G_CONFIRM, G_MAX_NUMBER
        ) VALUES (
            #{g_name}, #{g_info}, #{g_category}, #{g_master_id}, #{g_img_name}, #{g_location}, #{g_confirm}, #{g_max_number}
        )
    </insert>

    <!-- 마지막으로 삽입된 그룹 ID 조회 -->
    <select id="findLastInsertedGroupNo" resultType="int">
        SELECT LAST_INSERT_ID()
    </select>

    <!-- 그룹 멤버 추가 -->
    <insert id="insertGroupMember">
        INSERT INTO TBL_GROUP_MEMBER (G_NO, M_NO, G_M_ROLE)
        VALUES (#{gNo}, #{mNo}, #{gMRole})
    </insert>

    <!-- 특정 m_id가 포함된 그룹 리스트 가져오기 -->
	<select id="findGroupsByUserId" parameterType="string" resultType="com.moim.moimapiserver.group.GroupDto">
	    SELECT 
	        g.G_NO AS g_no, 
	        g.G_NAME AS g_name, 
	        g.G_IMG_NAME AS g_img_name, 
	        g.G_INFO AS g_info,
	        g.G_CATEGORY AS g_category,
	        g.G_MASTER_ID AS g_master_id,
	        g.G_MAX_NUMBER AS g_max_number,
	        g.G_LOCATION AS g_location,
	        g.G_GOOD AS g_good,
	        g.G_PUBLIC AS g_public,
	        g.G_CONFIRM AS g_confirm,
	        g.G_REGIST AS g_regist,
	        g.G_REG_DATE AS g_reg_date,
	        g.G_MOD_DATE AS g_mod_date,
	        (
	            SELECT COUNT(*)
	            FROM TBL_GROUP_MEMBER gm
	            WHERE gm.G_NO = g.G_NO AND gm.G_M_ROLE != 0
	        ) AS memberCount,
	        gm.G_M_ROLE AS g_m_role -- 회원 역할 정보 추가
	    FROM TBL_GROUP g
	    JOIN TBL_GROUP_MEMBER gm ON g.G_NO = gm.G_NO -- TBL_GROUP_MEMBER와 조인
	    WHERE g.G_NO IN (
	        SELECT gm.G_NO 
	        FROM TBL_GROUP_MEMBER gm 
	        WHERE gm.M_NO = (
	            SELECT M_NO 
	            FROM TBL_MEMBER 
	            WHERE M_ID = #{userId} OR M_SOCIAL_ID = #{userId}
	        )
	    )
	    AND gm.M_NO = (
	        SELECT M_NO 
	        FROM TBL_MEMBER 
	        WHERE M_ID = #{userId} OR M_SOCIAL_ID = #{userId}
	    ); 
	</select>



	
	<select id="findGroupByGNo" parameterType="int" resultType="com.moim.moimapiserver.group.GroupDto">
	    SELECT 
	        g.G_NO AS g_no, 
	        g.G_NAME AS g_name, 
	        g.G_INFO AS g_info,
	        g.G_CATEGORY AS g_category,
	        g.G_LOCATION AS g_location,
	        g.G_IMG_NAME AS g_img_name,
	        g.G_CONFIRM AS g_confirm,
	        g.G_MAX_NUMBER AS g_max_number,
	        g.G_REG_DATE AS g_reg_date,
	        g.G_CONFIRM AS g_confirm,
	        g.G_REGIST AS g_regist,
	        g.G_PUBLIC AS g_public,
	        (
            SELECT COUNT(*)
            FROM TBL_GROUP_MEMBER gm
            WHERE gm.G_NO = g.G_NO AND gm.G_M_ROLE != 0
        	) AS memberCount,
	        g.G_MASTER_ID AS g_master_id,
	        m.M_NICKNAME AS g_master_nickname
	    FROM 
	        TBL_GROUP g
	    LEFT JOIN 
	        TBL_MEMBER m
	    ON 
	        g.G_MASTER_ID = m.M_NO
	    WHERE 
	        g.G_NO = #{gNo}
	</select>
	
	<select id="isGroupMember" parameterType="map" resultType="int">
        SELECT COUNT(*)
        FROM TBL_GROUP_MEMBER
        WHERE G_NO = #{gNo} AND M_NO = #{mNo}
    </select>
    
    <insert id="insertPost" parameterType="com.moim.moimapiserver.group.PostDto">
        INSERT INTO TBL_POST (G_NO, M_NO, P_TEXT, P_IMG, P_REG_DATE, P_MOD_DATE)
        VALUES (#{g_no}, #{m_no}, #{p_text}, #{p_img}, NOW(), NOW())
    </insert>
    
	<select id="findPostsByGroup" parameterType="int" resultType="com.moim.moimapiserver.group.PostDto">
	    SELECT 
	        p.P_NO,
	        p.G_NO,
	        p.M_NO,
	        p.P_TEXT,
	        p.P_IMG,
	        p.P_REG_DATE,
	        p.P_MOD_DATE,
	        m.M_NICKNAME,
	        m.M_PROFILE_IMG,
	        m.M_MAIL,
	        m.M_CATEGORY,
	        gm.G_M_ROLE,
	        gm.G_REG_DATE -- 멤버의 그룹 가입일 (없으면 NULL)
	    FROM 
	        TBL_POST p
	    JOIN 
	        TBL_MEMBER m
	    ON 
	        p.M_NO = m.M_NO
	    LEFT JOIN 
	        TBL_GROUP_MEMBER gm
	    ON 
	        p.G_NO = gm.G_NO AND p.M_NO = gm.M_NO
	    WHERE 
	        p.G_NO = #{gNo} -- 특정 그룹
	    ORDER BY 
	        p.P_REG_DATE DESC
	</select>

	
	<select id="findGroupConfirmStatus" parameterType="int" resultType="int">
	    SELECT G_CONFIRM
	    FROM TBL_GROUP
	    WHERE G_NO = #{gNo}
	</select>
	
	<select id="findGroupMemberRole" parameterType="map" resultType="int">
	    SELECT G_M_ROLE
	    FROM TBL_GROUP_MEMBER
	    WHERE G_NO = #{gNo} AND M_NO = #{mNo};
	</select>
	
	<select id="findMembersByGroupNo" parameterType="int" resultType="com.moim.moimapiserver.group.GroupMemberDto">
	    SELECT 
	        gm.G_M_NO,
	        gm.G_NO,
	        gm.M_NO,
	        gm.G_M_ROLE,
	        gm.G_REG_DATE,
	        gm.G_MOD_DATE,
	        m.M_NICKNAME AS m_nickname,
	        m.M_PROFILE_IMG AS m_profile_img,
	        m.M_CATEGORY AS m_category,
	        m.M_MAIL AS m_mail
	    FROM TBL_GROUP_MEMBER gm
	    JOIN TBL_MEMBER m ON gm.M_NO = m.M_NO
	    WHERE gm.G_NO = #{gNo}
	    ORDER BY gm.G_M_ROLE DESC, gm.G_REG_DATE ASC;
	</select>

	<insert id="insertComment" parameterType="com.moim.moimapiserver.group.CommentDto">
        INSERT INTO TBL_COMMENT (G_NO, P_NO, M_NO, CO_TEXT, CO_REG_DATE, CO_MOD_DATE)
        VALUES (#{g_no}, #{p_no}, #{m_no}, #{co_text}, NOW(), NOW())
    </insert>

    <!-- 게시글별 댓글 조회 -->
	<select id="findCommentsByPost" parameterType="int" resultType="com.moim.moimapiserver.group.CommentDto">
	    SELECT 
	        c.CO_NO AS co_no,
	        c.G_NO AS g_no,
	        c.P_NO AS p_no,
	        c.M_NO AS m_no,
	        c.CO_TEXT AS co_text,
	        c.CO_REG_DATE AS co_reg_date,
	        c.CO_MOD_DATE AS co_mod_date,
	        m.M_NICKNAME AS m_nickname,
		        m.M_PROFILE_IMG AS m_profile_img,
		        m.M_MAIL AS m_mail,
		        m.M_CATEGORY AS m_category,
		        gm.G_M_ROLE AS g_m_role,
		        gm.G_REG_DATE AS g_reg_date -- 추가된 G_REG_DATE
		    FROM 
		        TBL_COMMENT c
		    JOIN 
		        TBL_MEMBER m
		    ON 
		        c.M_NO = m.M_NO
		    LEFT JOIN 
		        TBL_GROUP_MEMBER gm
		    ON 
		        c.G_NO = gm.G_NO AND c.M_NO = gm.M_NO
		    JOIN 
		        TBL_GROUP g -- TBL_GROUP 테이블 조인
		    ON 
		        c.G_NO = g.G_NO -- 그룹 번호를 기준으로 조인
		    WHERE 
		        c.P_NO = #{p_no}
		    ORDER BY 
		        c.CO_REG_DATE DESC
		</select>

	
	<select id="getUserRoleInGroup" parameterType="map" resultType="int">
        SELECT G_M_ROLE
        FROM TBL_GROUP_MEMBER
        WHERE G_NO = #{gNo} AND M_NO = #{mNo}
    </select>

    <select id="getPostOwner" parameterType="int" resultType="int">
        SELECT M_NO
        FROM TBL_POST
        WHERE P_NO = #{pNo}
    </select>

    <delete id="deleteCommentsByPost" parameterType="int">
        DELETE FROM TBL_COMMENT
        WHERE P_NO = #{pNo}
    </delete>

    <delete id="deletePost" parameterType="map">
        DELETE FROM TBL_POST
        WHERE G_NO = #{gNo} AND P_NO = #{pNo}
    </delete>
    
    <select id="checkPostExists" parameterType="int" resultType="int">
        SELECT COUNT(1)
        FROM TBL_POST
        WHERE P_NO = #{pNo}
    </select>

    <!-- 게시글 수정 -->
    <update id="updatePost" parameterType="map">
    UPDATE TBL_POST
	    SET 
	        P_TEXT = #{pText},
	        P_IMG = CASE WHEN #{pImg} IS NULL THEN P_IMG ELSE #{pImg} END, 
	        P_MOD_DATE = NOW()
	    WHERE P_NO = #{pNo}
	</update>
	
	<delete id="deleteComment" parameterType="int">
	    DELETE FROM TBL_COMMENT WHERE CO_NO = #{coNo}
	</delete>
	
	<select id="getCommentOwner" parameterType="int" resultType="int">
	    SELECT M_NO FROM TBL_COMMENT WHERE CO_NO = #{coNo}
	</select>
	

	<insert id="createMessage">
	    INSERT INTO TBL_CHATTING (G_NO, M_NO, C_CONTENT, C_IMG_URL, C_REG_DATE)
	    SELECT 
	        #{g_no}, 
	        #{m_no}, 
	        #{c_content},
	        #{c_img_url},
	        NOW()
	    FROM TBL_MEMBER 
	    WHERE M_NO = #{m_no}
	</insert>
	
	<select id="getMessagesByGroup" resultType="com.moim.moimapiserver.group.ChatDto">
	    SELECT 
	        c.G_NO, 
	        c.M_NO, 
	        c.C_CONTENT, 
	        c.C_REG_DATE,
	        c.C_IMG_URL, 
	        m.M_NICKNAME,
	        m.M_PROFILE_IMG,
	        m.M_MAIL,
	        m.M_CATEGORY,
	        gm.G_M_ROLE,
	        gm.G_REG_DATE AS g_reg_date -- 그룹 가입 날짜 추가
	    FROM 
	        TBL_CHATTING c
	    JOIN 
	        TBL_MEMBER m 
	    ON 
	        c.M_NO = m.M_NO
	    LEFT JOIN 
	        TBL_GROUP_MEMBER gm -- TBL_GROUP_MEMBER 테이블 LEFT JOIN
	    ON 
	        c.G_NO = gm.G_NO AND c.M_NO = gm.M_NO -- 그룹과 멤버 매핑
	    WHERE 
	        c.G_NO = #{g_no} -- 특정 그룹
	    ORDER BY 
	        c.C_REG_DATE ASC -- 메시지 등록 날짜 기준 정렬
	</select>


	
	<update id="updateGroup" parameterType="map">
	    UPDATE TBL_GROUP
	    SET 
	        G_NAME = #{updatedGroupData.g_name},
	        G_INFO = #{updatedGroupData.g_info},
	        G_CATEGORY = #{updatedGroupData.g_category},
	        G_MAX_NUMBER = #{updatedGroupData.g_max_number},
	        G_PUBLIC = #{updatedGroupData.g_public},
	        G_REGIST = #{updatedGroupData.g_regist},
	        G_CONFIRM = #{updatedGroupData.g_confirm},
	        G_IMG_NAME = #{updatedGroupData.g_img_name}
	    WHERE G_NO = #{gNo}
	</update>
	
	<select id="findPostsByGroupAndMember" parameterType="map" resultType="com.moim.moimapiserver.group.PostDto">
	    SELECT 
	      p.P_NO AS p_no,
	      p.G_NO AS g_no,
	      p.M_NO AS m_no,
	      p.P_TEXT AS p_text,
	      p.P_IMG AS p_img,
	      p.P_REG_DATE AS p_reg_date,
	      m.M_NICKNAME AS m_nickname,
	      m.M_PROFILE_IMG AS m_profile_img
	    FROM 
	      TBL_POST p
	    JOIN 
	      TBL_MEMBER m 
	    ON 
	      p.M_NO = m.M_NO
	    WHERE 
	      p.G_NO = #{gNo} 
	      AND p.M_NO = #{mNo}
	    ORDER BY 
	      p.P_REG_DATE DESC
	  </select>
	  
	 <delete id="deleteGroupMember" parameterType="map">
	   DELETE FROM TBL_GROUP_MEMBER
	   WHERE G_NO = #{gNo} AND M_NO = #{mNo}
	 </delete>
	 
	 <update id="updateMemberRole" parameterType="map">
	    UPDATE TBL_GROUP_MEMBER
	    SET G_M_ROLE = #{gMRole}
	    WHERE G_NO = #{gNo} AND M_NO = #{mNo}
	</update>
	
	<select id="findAllGroups" resultType="com.moim.moimapiserver.group.GroupDto">
	    SELECT 
	        g.G_NO AS g_no,
	        g.G_NAME AS g_name,
	        g.G_INFO AS g_info,
	        g.G_CATEGORY AS g_category,
	        g.G_LOCATION AS g_location,
	        g.G_IMG_NAME AS g_img_name,
	        g.G_CONFIRM AS g_confirm,
	        g.G_MAX_NUMBER AS g_max_number,
	        g.G_PUBLIC AS g_public,
	        g.G_REG_DATE AS g_reg_date,
	        g.G_MASTER_ID AS g_master_id,
	        m.M_NICKNAME AS g_master_nickname,
	        (
	            SELECT COUNT(*)
	            FROM TBL_GROUP_MEMBER gm
	            WHERE gm.G_NO = g.G_NO AND gm.G_M_ROLE != 0
	        ) AS memberCount
	    FROM 
	        TBL_GROUP g
	    LEFT JOIN 
	        TBL_MEMBER m
	    ON 
	        g.G_MASTER_ID = m.M_NO
	    ORDER BY 
	        memberCount DESC, 
	        g.G_REG_DATE DESC
	</select>

	<select id="getMyGroup" parameterType="com.moim.moimapiserver.member.MemberDto" resultType="com.moim.moimapiserver.group.GroupDto">
		SELECT g.*
		FROM TBL_GROUP g
				 JOIN TBL_GROUP_MEMBER gm ON g.G_NO = gm.G_NO
				 JOIN TBL_MEMBER m ON m.M_NO = gm.M_NO
		WHERE
			(m.M_ID = #{m_id} OR m.M_SOCIAL_ID = #{m_social_id})
		  AND gm.G_M_ROLE = 3
	</select>

	<update id="updateGroupStatus" parameterType="com.moim.moimapiserver.group.GroupDto">
		UPDATE TBL_GROUP SET G_STATUS = #{g_status}	WHERE G_NO =#{g_no}
	</update>

<<<<<<< HEAD
	<select id="getPremiumGroup" resultType="com.moim.moimapiserver.group.GroupDto">
		SELECT * FROM TBL_GROUP WHERE G_STATUS = 1
	</select>


=======
 
>>>>>>> 69af5ebee95b38de9337e469be561448cf375559
	  
	
</mapper>
